import { OpenAI } from "openai";
import "dotenv/config";
const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

export async function generateText(noteData) {
  const completion = await openai.chat.completions.create({
    messages: [
      {
        role: "system",
        content: `You are a helpful assistant that summarizes the  notes. Summarize and organize the following collection of study notes from a screen recording session. Please format the summary in Markdown, creating a well-structured, easy-to-review document:
            - Begin with a brief overview of the main topics covered
            - Organize the content into logical sections and subsections
            - Use appropriate Markdown headings (# for main sections, ## for subsections, etc.)
            - Utilize bullet points and numbered lists for clarity
            - Include any important formulas, equations, or code snippets in appropriate code blocks
            - Create tables if they would help organize related information
            - Bold key terms or important concepts
            - Use italics for emphasis where appropriate
            - If applicable, include a brief "Key Takeaways" section at the end
        Aim to create a comprehensive yet concise summary that captures the essence of the study session. The final document should be well-organized, visually appealing, and effective for review purposes.
        If you notice any gaps in the information or areas that seem to lack context, please note these at the end of the summary as "Potential areas for further study".:
        ALWAYS return in JSON fromat
        {
          "title": "title generated by gpt",
          "content": "notes generated by gpt"
        }`,
      },
      { role: "user", content: noteData },
    ],
    model: "gpt-4o",
    temperature: 0.5,
    response_format: { type: "json_object" },
  });
  return completion.choices[0].message.content;
}

export async function generateQuiz(noteData, numQuestions) {
  const completion = await openai.chat.completions.create({
    messages: [
      {
        role: "system",
        content: `You are an expert quiz creator. Your task is to generate a quiz based solely on the provided notes. Create ${numQuestions} multiple-choice questions that accurately reflect the content of the notes. Each question should have 4 choices, with only one correct answer. Ensure that the questions cover a range of difficulty levels and topics from the notes.

        Return your response as a JSON object in the following format:
        {
          "questions": [
            {
              "id": 1,
              "question": "What is the primary function of mitochondria in a cell?",
              "choices": [
                "Protein synthesis",
                "Energy production",
                "Cell division",
                "Waste removal"
              ],
              "answer": "Energy production",
              "explanation": "Mitochondria are often referred to as the 'powerhouses' of the cell because they generate most of the cell's supply of adenosine triphosphate (ATP), used as a source of chemical energy."
            },
            {
              "id": 2,
              "question": "Which of the following is NOT a component of the central dogma of molecular biology?",
              "choices": [
                "DNA",
                "RNA",
                "Proteins",
                "Lipids"
              ],
              "answer": "Lipids",
              "explanation": "The central dogma of molecular biology describes the flow of genetic information within a biological system. It involves DNA, RNA, and proteins, but not lipids."
            }
          ]
        }

        Ensure that:
        1. Questions are clear, concise, and directly related to the provided notes.
        2. All choices are plausible, with only one being correct.
        3. The correct answer is accurately indicated.
        4. The explanation provides a brief but informative justification for the correct answer.
        5. The difficulty of questions varies to test different levels of understanding.`,
      },
      { role: "user", content: noteData },
    ],
    model: "gpt-4o",
    temperature: 0.5,
    response_format: { type: "json_object" },
  });
  return completion.choices[0].message.content;
}
